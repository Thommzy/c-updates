{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport { Card, Image, Button, Header, Container, Input, Search } from \"semantic-ui-react\"; // import us from \"/static/us-flag.jpg\";\n\nimport moment from \"moment\";\nconst router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  let aa = str.toString().split(\"\");\n\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nexport default class recovered extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isLoading: false,\n      results: this.props.confirms,\n      value: \"\"\n    });\n\n    _defineProperty(this, \"handleResultSelect\", (e, {\n      result\n    }) => this.setState({\n      value: result.countryRegion\n    }));\n\n    _defineProperty(this, \"handleSearchChange\", (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState({\n          isLoading: false,\n          results: this.props.confirms,\n          value: \"\"\n        });\n        const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.countryRegion);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.props.confirms, isMatch)\n        });\n      }, 300);\n    });\n  }\n\n  static async getInitialProps() {\n    let confirms = [];\n\n    try {\n      const response = await axios.get(`${BASE_URL}/confirmed`);\n      confirms = response.data; // console.table(confirms);\n    } catch (error) {//  console.log(error);\n    }\n\n    return {\n      confirms,\n      loading: false\n    };\n  }\n\n  render() {\n    const {\n      confirms,\n      loading\n    } = this.props;\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n    console.log(results);\n    return __jsx(React.Fragment, null, __jsx(MainMenu, {\n      router: router\n    }), __jsx(\"div\", {\n      className: \"searchBar\"\n    }, __jsx(Search, {\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      placeholder: \"Search Country\"\n    })), __jsx(Container, null, !loading ? __jsx(\"div\", {\n      className: \"main-confirmed\"\n    }, __jsx(Card.Group, {\n      className: \"card-main\"\n    }, results.map((key, i) => __jsx(Card, {\n      key: i,\n      className: \"center\"\n    }, __jsx(Card.Content, null, __jsx(Image, {\n      floated: \"right\",\n      size: \"mini\",\n      src: key.countryRegion === \"US\" ? \"/static/us-flag.jpg\" : key.countryRegion === \"Spain\" ? \"/static/spain-flag.jpg\" : key.countryRegion === \"Italy\" ? \"/static/italy-flag.jpg\" : key.countryRegion === \"France\" ? \"/static/france-flag.jpg\" : key.countryRegion === \"Germany\" ? \"/static/germany-flag.gif\" : key.countryRegion === \"United Kingdom\" ? \"/static/uk-flag.jpg\" : key.countryRegion === \"Turkey\" ? \"/static/turkey-flag.jpg\" : key.countryRegion === \"Iran\" ? \"/static/iran-flag.jpg\" : key.countryRegion === \"Russia\" ? \"/static/russia-flag.jpg\" : key.countryRegion === \"China\" ? \"/static/china-flag.jpg\" : key.countryRegion === \"Brazil\" ? \"/static/brazil-flag.jpg\" : key.countryRegion === \"Belgium\" ? \"/static/belgium-flag.jpg\" : key.countryRegion === \"Netherlands\" ? \"/static/netherland-flag.jpg\" : key.countryRegion === \"Switzerland\" ? \"/static/switzerland-flag.jpg\" : key.countryRegion === \"India\" ? \"/static/india-flag.jpg\" : key.countryRegion === \"Peru\" ? \"/static/peru-flag.png\" : key.countryRegion === \"Canada\" ? \"/static/canada-flag.jpg\" : key.countryRegion === \"Portugal\" ? \"/static/portugal-flag.jpg\" : key.countryRegion === \"Ecuador\" ? \"/static/ecuador-flag.png\" : key.countryRegion === \"Ireland\" ? \"/static/ireland.jpg\" : key.countryRegion === \"Nigeria\" ? \"/static/nigeria-flag.jpg\" : key.countryRegion === \"Ghana\" ? \"/static/ghana-flag.jpg\" : null,\n      className: \"center\"\n    }), __jsx(Card.Description, {\n      className: \"lowerSpace\"\n    }, \"Province state:\", __jsx(\"strong\", null, key.provinceState)), __jsx(Card.Description, {\n      className: \"lowerSpace\"\n    }, \"Country Region:\", __jsx(\"strong\", null, key.countryRegion)), __jsx(Card.Description, {\n      className: \"lowerSpace\"\n    }, \"Last Update:\", __jsx(\"strong\", null, moment(key.lastUpdate).format(\"YYYY-MM-DD\"))), __jsx(Card.Description, {\n      className: \"lowerSpace\"\n    }, \"Recovered:\", __jsx(\"strong\", null, addComma(key.recovered))), __jsx(Card.Description, {\n      className: \"lowerSpace\"\n    }, \"Active:\", __jsx(\"strong\", null, addComma(key.active)))), __jsx(Card.Content, {\n      extra: true\n    }, __jsx(\"div\", {\n      className: \"ui two buttons\"\n    }, __jsx(Button, {\n      basic: true,\n      color: \"red\"\n    }, \"||\"))))))) : __jsx(\"h1\", null, \"Loading...\")));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}