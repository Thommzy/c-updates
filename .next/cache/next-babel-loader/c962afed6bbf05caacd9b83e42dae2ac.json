{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Button, Card, Image, Container, Header, Icon } from \"semantic-ui-react\";\nimport Link from \"next/link\";\nimport moment from \"moment\";\n\nfunction addMillions(str) {\n  let aa = str.toString();\n  let bb = \"\";\n\n  if (aa.length === 7) {\n    let firstSection = aa.substring(0, 1);\n    let secondSection = aa.substring(1, 4);\n    let thirdSection = aa.substring(4);\n    bb += `${firstSection},${secondSection},${thirdSection}`;\n  }\n\n  if (aa.length === 6) {\n    let firstSection = aa.substring(0, 3);\n    let secondSection = aa.substring(3);\n    bb += `${firstSection},${secondSection}`;\n  }\n\n  if (aa.length === 5) {\n    let firstSection = aa.substring(0, 2);\n    let secondSection = aa.substring(2);\n    bb += `${firstSection},${secondSection}`;\n  }\n\n  if (aa.length === 4) {\n    let firstSection = aa.substring(0, 1);\n    let secondSection = aa.substring(1);\n    bb += `${firstSection},${secondSection}`;\n  }\n\n  return bb;\n}\n\nconst CardReport = ({\n  read,\n  loading\n}) => __jsx(Container, null, __jsx(\"div\", {\n  className: \"cardd\"\n}, __jsx(Card.Group, {\n  className: \"card-main\"\n}, Object.keys(read).map((key, i) => read[key].value || key === \"lastUpdate\" ? __jsx(Card, {\n  key: i,\n  className: \"center\"\n}, __jsx(Card.Content, null, __jsx(\"div\", {\n  className: \"medkit\"\n}, read[key].value ? __jsx(Icon, {\n  className: key === \"confirmed\" ? \"medkit__icon__confirmed\" : key === \"recovered\" ? \"medkit__icon__recovered\" : key === \"deaths\" ? \"medkit__icon__deaths\" : null,\n  name: \"medkit\"\n}) : null), __jsx(Header, {\n  as: \"h1\"\n}, key === \"lastUpdate\" ? \"Last Update\" : key), key === \"lastUpdate\" ? __jsx(Header, {\n  className: \"lightText\",\n  as: \"h3\"\n}, moment(read[key]).format(\"LLLL\")) : null, key === \"confirmed\" ? __jsx(Link, {\n  href: \"/confirmed\",\n  as: `/${key}`\n}, __jsx(Button, {\n  className: \"button-way\"\n}, \"Read More\")) : null, key === \"recovered\" ? __jsx(Link, {\n  href: \"/recovered\",\n  as: `/${key}`\n}, __jsx(Button, {\n  className: \"button-way\"\n}, \"Read More\")) : null, key === \"deaths\" ? __jsx(Link, {\n  href: \"/deaths\",\n  as: `/${key}`\n}, __jsx(Button, {\n  className: \"button-way\"\n}, \"Read More\")) : null, __jsx(Card.Header, null, read[key].value ? addMillions(Number(read[key].value)) : null))) : null))));\n\nexport default CardReport;","map":null,"metadata":{},"sourceType":"module"}