{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport { Card, Image, Button, Header, Container } from \"semantic-ui-react\"; // import us from \"/static/us-flag.jpg\";\n\nimport moment from \"moment\";\nvar router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  var aa = str.toString().split(\"\");\n\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nvar deaths = /*#__PURE__*/function (_Component) {\n  _inherits(deaths, _Component);\n\n  var _super = _createSuper(deaths);\n\n  function deaths() {\n    _classCallCheck(this, deaths);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(deaths, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Yay\");\n    } // renderConfirmed(confirms) {\n    //   return confirms.map((key) => {\n    //     //  console.log(confirms);\n    //     return confirms;\n    //   });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var confirms = this.props.confirms;\n      console.log(confirms);\n      return __jsx(React.Fragment, null, __jsx(MainMenu, {\n        router: router\n      }), __jsx(Container, null, __jsx(\"div\", {\n        className: \"main-confirmed\"\n      }, __jsx(Card.Group, {\n        className: \"card-main\"\n      }, Object.keys(confirms).map(function (key, i) {\n        return __jsx(Card, {\n          key: i,\n          className: \"center\"\n        }, __jsx(Card.Content, null, __jsx(Image, {\n          floated: \"right\",\n          size: \"mini\",\n          src: confirms[key].countryRegion === \"US\" ? \"/static/us-flag.jpg\" : confirms[key].countryRegion === \"Spain\" ? \"/static/spain-flag.jpg\" : confirms[key].countryRegion === \"Italy\" ? \"/static/italy-flag.jpg\" : confirms[key].countryRegion === \"France\" ? \"/static/france-flag.jpg\" : confirms[key].countryRegion === \"Germany\" ? \"/static/germany-flag.gif\" : confirms[key].countryRegion === \"United Kingdom\" ? \"/static/uk-flag.jpg\" : confirms[key].countryRegion === \"Turkey\" ? \"/static/turkey-flag.jpg\" : confirms[key].countryRegion === \"Iran\" ? \"/static/iran-flag.jpg\" : confirms[key].countryRegion === \"Russia\" ? \"/static/russia-flag.jpg\" : confirms[key].countryRegion === \"China\" ? \"/static/china-flag.jpg\" : confirms[key].countryRegion === \"Brazil\" ? \"/static/brazil-flag.jpg\" : confirms[key].countryRegion === \"Belgium\" ? \"/static/belgium-flag.jpg\" : confirms[key].countryRegion === \"Netherlands\" ? \"/static/netherland-flag.jpg\" : confirms[key].countryRegion === \"Switzerland\" ? \"/static/switzerland-flag.jpg\" : confirms[key].countryRegion === \"India\" ? \"/static/india-flag.jpg\" : confirms[key].countryRegion === \"Peru\" ? \"/static/peru-flag.png\" : confirms[key].countryRegion === \"Canada\" ? \"/static/canada-flag.jpg\" : confirms[key].countryRegion === \"Portugal\" ? \"/static/portugal-flag.jpg\" : confirms[key].countryRegion === \"Ecuador\" ? \"/static/ecuador-flag.png\" : confirms[key].countryRegion === \"Ireland\" ? \"/static/ireland.jpg\" : confirms[key].countryRegion === \"Nigeria\" ? \"/static/nigeria-flag.jpg\" : confirms[key].countryRegion === \"Ghana\" ? \"/static/ghana-flag.jpg\" : null,\n          className: \"center\"\n        }), __jsx(Card.Description, {\n          className: \"lowerSpace\"\n        }, \"Province state:\", __jsx(\"strong\", null, confirms[key].provinceState)), __jsx(Card.Description, {\n          className: \"lowerSpace\"\n        }, \"Country Region:\", __jsx(\"strong\", null, confirms[key].countryRegion)), __jsx(Card.Description, {\n          className: \"lowerSpace\"\n        }, \"Last Update:\", __jsx(\"strong\", null, moment(confirms[key].lastUpdate).format(\"YYYY-MM-DD\"))), __jsx(Card.Description, {\n          className: \"lowerSpace\"\n        }, \"Deaths:\", __jsx(\"strong\", null, addComma(confirms[key].deaths))), __jsx(Card.Description, {\n          className: \"lowerSpace\"\n        }, \"Active:\", __jsx(\"strong\", null, addComma(confirms[key].active)))), __jsx(Card.Content, {\n          extra: true\n        }, __jsx(\"div\", {\n          className: \"ui two buttons\"\n        }, __jsx(Button, {\n          basic: true,\n          color: \"red\"\n        }, \"||\"))));\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var confirms, response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              confirms = [];\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"\".concat(BASE_URL, \"/confirmed\")));\n\n            case 4:\n              response = _context.sent;\n              confirms = response.data; // console.table(confirms);\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n              return _context.abrupt(\"return\", {\n                confirms: confirms\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }\n  }]);\n\n  return deaths;\n}(Component);\n\nexport { deaths as default };","map":null,"metadata":{},"sourceType":"module"}