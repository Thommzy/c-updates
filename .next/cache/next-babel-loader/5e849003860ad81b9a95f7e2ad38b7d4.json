{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/covidtracker/tracker/pages/confirmed.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport { Card, Image, Button, Header, Container } from \"semantic-ui-react\"; // import us from \"/static/us-flag.jpg\";\n\nimport moment from \"moment\";\nconst router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  let aa = str.toString().split(\"\");\n\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nexport default class confirmed extends Component {\n  static async getInitialProps() {\n    let confirms = [];\n\n    try {\n      const response = await axios.get(`${BASE_URL}/confirmed`);\n      confirms = response.data; // console.table(confirms);\n    } catch (error) {\n      console.log(error);\n    }\n\n    return {\n      confirms\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Yay\");\n  } // renderConfirmed(confirms) {\n  //   return confirms.map((key) => {\n  //     //  console.log(confirms);\n  //     return confirms;\n  //   });\n  // }\n\n\n  render() {\n    const {\n      confirms\n    } = this.props;\n    console.log(confirms);\n    return __jsx(React.Fragment, null, __jsx(MainMenu, {\n      router: router,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(Card.Group, {\n      className: \"card-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"hello\", Object.keys(confirms).map((key, i) => __jsx(Card, {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, __jsx(Image, {\n      floated: \"right\",\n      size: \"mini\",\n      src: confirms[key].countryRegion === \"US\" ? \"/static/us-flag.jpg\" : confirms[key].countryRegion === \"Spain\" ? \"/static/spain-flag.jpg\" : confirms[key].countryRegion === \"Italy\" ? \"/static/italy-flag.jpg\" : confirms[key].countryRegion === \"France\" ? \"/static/france-flag.jpg\" : confirms[key].countryRegion === \"Germany\" ? \"/static/germany-flag.gif\" : confirms[key].countryRegion === \"United Kingdom\" ? \"/static/uk-flag.jpg\" : confirms[key].countryRegion === \"Turkey\" ? \"/static/turkey-flag.jpg\" : confirms[key].countryRegion === \"Iran\" ? \"/static/iran-flag.jpg\" : confirms[key].countryRegion === \"Russia\" ? \"/static/russia-flag.jpg\" : confirms[key].countryRegion === \"China\" ? \"/static/china-flag.jpg\" : confirms[key].countryRegion === \"Brazil\" ? \"/static/brazil-flag.jpg\" : confirms[key].countryRegion === \"Belgium\" ? \"/static/belgium-flag.jpg\" : confirms[key].countryRegion === \"Netherlands\" ? \"/static/netherland-flag.jpg\" : confirms[key].countryRegion === \"Switzerland\" ? \"/static/switzerland-flag.jpg\" : confirms[key].countryRegion === \"India\" ? \"/static/india-flag.jpg\" : confirms[key].countryRegion === \"Peru\" ? \"/static/peru-flag.png\" : confirms[key].countryRegion === \"Canada\" ? \"/static/canada-flag.jpg\" : confirms[key].countryRegion === \"Portugal\" ? \"/static/portugal-flag.jpg\" : confirms[key].countryRegion === \"Ecuador\" ? \"/static/ecuador-flag.png\" : confirms[key].countryRegion === \"Ireland\" ? \"/static/ireland.jpg\" : confirms[key].countryRegion === \"Nigeria\" ? \"/static/nigeria-flag.jpg\" : confirms[key].countryRegion === \"Ghana\" ? \"/static/ghana-flag.jpg\" : null,\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), __jsx(Card.Description, {\n      className: \"lowerSpace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Province state:\", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }, confirms[key].provinceState)), __jsx(Card.Description, {\n      className: \"lowerSpace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Country Region:\", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    }, confirms[key].countryRegion)), __jsx(Card.Description, {\n      className: \"lowerSpace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Last Update:\", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, moment(confirms[key].lastUpdate).format(\"YYYY-MM-DD\"))), __jsx(Card.Description, {\n      className: \"lowerSpace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Confirmed:\", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, addComma(confirms[key].confirmed))), __jsx(Card.Description, {\n      className: \"lowerSpace\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Active:\", __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, addComma(confirms[key].active)))), __jsx(Card.Content, {\n      extra: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"ui two buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      basic: true,\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, \"Incident Rate: 8.34%\")))))))));\n  }\n\n}","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/covidtracker/tracker/pages/confirmed.js"],"names":["React","Component","Router","BASE_URL","axios","MainMenu","Card","Image","Button","Header","Container","moment","router","console","log","addComma","str","aa","toString","split","length","splice","join","confirmed","getInitialProps","confirms","response","get","data","error","componentDidMount","render","props","Object","keys","map","key","i","countryRegion","provinceState","lastUpdate","format","active"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport { Card, Image, Button, Header, Container } from \"semantic-ui-react\";\n// import us from \"/static/us-flag.jpg\";\n\nimport moment from \"moment\";\nconst router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  let aa = str.toString().split(\"\");\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nexport default class confirmed extends Component {\n  static async getInitialProps() {\n    let confirms = [];\n    try {\n      const response = await axios.get(`${BASE_URL}/confirmed`);\n      confirms = response.data;\n      // console.table(confirms);\n    } catch (error) {\n      console.log(error);\n    }\n    return { confirms };\n  }\n  componentDidMount() {\n    console.log(\"Yay\");\n  }\n\n  // renderConfirmed(confirms) {\n  //   return confirms.map((key) => {\n  //     //  console.log(confirms);\n  //     return confirms;\n  //   });\n  // }\n  render() {\n    const { confirms } = this.props;\n    console.log(confirms);\n    return (\n      <>\n        <MainMenu router={router} />\n        <Container>\n          <div className=\"main\">\n            <Card.Group className=\"card-main\">\n              hello\n              {Object.keys(confirms).map((key, i) => (\n                <Card className=\"center\">\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      size=\"mini\"\n                      src={\n                        confirms[key].countryRegion === \"US\"\n                          ? \"/static/us-flag.jpg\"\n                          : confirms[key].countryRegion === \"Spain\"\n                          ? \"/static/spain-flag.jpg\"\n                          : confirms[key].countryRegion === \"Italy\"\n                          ? \"/static/italy-flag.jpg\"\n                          : confirms[key].countryRegion === \"France\"\n                          ? \"/static/france-flag.jpg\"\n                          : confirms[key].countryRegion === \"Germany\"\n                          ? \"/static/germany-flag.gif\"\n                          : confirms[key].countryRegion === \"United Kingdom\"\n                          ? \"/static/uk-flag.jpg\"\n                          : confirms[key].countryRegion === \"Turkey\"\n                          ? \"/static/turkey-flag.jpg\"\n                          : confirms[key].countryRegion === \"Iran\"\n                          ? \"/static/iran-flag.jpg\"\n                          : confirms[key].countryRegion === \"Russia\"\n                          ? \"/static/russia-flag.jpg\"\n                          : confirms[key].countryRegion === \"China\"\n                          ? \"/static/china-flag.jpg\"\n                          : confirms[key].countryRegion === \"Brazil\"\n                          ? \"/static/brazil-flag.jpg\"\n                          : confirms[key].countryRegion === \"Belgium\"\n                          ? \"/static/belgium-flag.jpg\"\n                          : confirms[key].countryRegion === \"Netherlands\"\n                          ? \"/static/netherland-flag.jpg\"\n                          : confirms[key].countryRegion === \"Switzerland\"\n                          ? \"/static/switzerland-flag.jpg\"\n                          : confirms[key].countryRegion === \"India\"\n                          ? \"/static/india-flag.jpg\"\n                          : confirms[key].countryRegion === \"Peru\"\n                          ? \"/static/peru-flag.png\"\n                          : confirms[key].countryRegion === \"Canada\"\n                          ? \"/static/canada-flag.jpg\"\n                          : confirms[key].countryRegion === \"Portugal\"\n                          ? \"/static/portugal-flag.jpg\"\n                          : confirms[key].countryRegion === \"Ecuador\"\n                          ? \"/static/ecuador-flag.png\"\n                          : confirms[key].countryRegion === \"Ireland\"\n                          ? \"/static/ireland.jpg\"\n                          : confirms[key].countryRegion === \"Nigeria\"\n                          ? \"/static/nigeria-flag.jpg\"\n                          : confirms[key].countryRegion === \"Ghana\"\n                          ? \"/static/ghana-flag.jpg\"\n                          : null\n                      }\n                      className=\"center\"\n                    />\n                    <Card.Description className=\"lowerSpace\">\n                      Province state:\n                      <strong>{confirms[key].provinceState}</strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Country Region:\n                      <strong>{confirms[key].countryRegion}</strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Last Update:\n                      <strong>\n                        {moment(confirms[key].lastUpdate).format(\"YYYY-MM-DD\")}\n                      </strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Confirmed:\n                      <strong>{addComma(confirms[key].confirmed)}</strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Active:\n                      <strong>{addComma(confirms[key].active)}</strong>\n                    </Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <div className=\"ui two buttons\">\n                      <Button basic color=\"red\">\n                        Incident Rate: 8.34%\n                      </Button>\n                    </div>\n                  </Card.Content>\n                </Card>\n              ))}\n            </Card.Group>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}