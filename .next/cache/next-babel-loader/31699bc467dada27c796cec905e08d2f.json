{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/covidtracker/tracker/pages/confirmed.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport { Card, Image, Button, Header, Container } from \"semantic-ui-react\";\nimport moment from \"moment\";\nvar router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  var aa = str.toString().split(\"\");\n\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nvar confirmed = /*#__PURE__*/function (_Component) {\n  _inherits(confirmed, _Component);\n\n  var _super = _createSuper(confirmed);\n\n  function confirmed() {\n    _classCallCheck(this, confirmed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(confirmed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Yay\");\n    } // renderConfirmed(confirms) {\n    //   return confirms.map((key) => {\n    //     //  console.log(confirms);\n    //     return confirms;\n    //   });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var confirms = this.props.confirms;\n      console.log(confirms);\n      return __jsx(React.Fragment, null, __jsx(MainMenu, {\n        router: router,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, __jsx(Card.Group, {\n        className: \"card-main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"hello\", Object.keys(confirms).map(function (key, i) {\n        return __jsx(Card, {\n          className: \"center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }, __jsx(Card.Content, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }\n        }, __jsx(Image, {\n          floated: \"right\",\n          size: \"mini\",\n          src: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\n          className: \"center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }\n        }), __jsx(Card.Description, {\n          className: \"lowerSpace\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, \"Province state:\", __jsx(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }\n        }, confirms[key].provinceState)), __jsx(Card.Description, {\n          className: \"lowerSpace\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }\n        }, \"Country Region:\", __jsx(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }\n        }, confirms[key].countryRegion)), __jsx(Card.Description, {\n          className: \"lowerSpace\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }\n        }, \"Last Update:\", __jsx(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }\n        }, moment(confirms[key].lastUpdate).format(\"YYYY-MM-DD\"))), __jsx(Card.Description, {\n          className: \"lowerSpace\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, \"Confirmed:\", __jsx(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }\n        }, addComma(confirms[key].confirmed))), __jsx(Card.Description, {\n          className: \"lowerSpace\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, \"Active:\", __jsx(\"strong\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 23\n          }\n        }, confirms[key].active))), __jsx(Card.Content, {\n          extra: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }\n        }, __jsx(\"div\", {\n          className: \"ui two buttons\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }\n        }, __jsx(Button, {\n          basic: true,\n          color: \"red\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        }, \"Incident Rate: 8.34%\"))));\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var confirms, response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              confirms = [];\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"\".concat(BASE_URL, \"/confirmed\")));\n\n            case 4:\n              response = _context.sent;\n              confirms = response.data; // console.table(confirms);\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n              return _context.abrupt(\"return\", {\n                confirms: confirms\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }\n  }]);\n\n  return confirmed;\n}(Component);\n\nexport { confirmed as default };","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/covidtracker/tracker/pages/confirmed.js"],"names":["React","Component","Router","BASE_URL","axios","MainMenu","Card","Image","Button","Header","Container","moment","router","console","log","addComma","str","aa","toString","split","length","splice","join","confirmed","confirms","props","Object","keys","map","key","i","provinceState","countryRegion","lastUpdate","format","active","get","response","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport { Card, Image, Button, Header, Container } from \"semantic-ui-react\";\nimport moment from \"moment\";\nconst router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  let aa = str.toString().split(\"\");\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nexport default class confirmed extends Component {\n  static async getInitialProps() {\n    let confirms = [];\n    try {\n      const response = await axios.get(`${BASE_URL}/confirmed`);\n      confirms = response.data;\n      // console.table(confirms);\n    } catch (error) {\n      console.log(error);\n    }\n    return { confirms };\n  }\n  componentDidMount() {\n    console.log(\"Yay\");\n  }\n\n  // renderConfirmed(confirms) {\n  //   return confirms.map((key) => {\n  //     //  console.log(confirms);\n  //     return confirms;\n  //   });\n  // }\n  render() {\n    const { confirms } = this.props;\n    console.log(confirms);\n    return (\n      <>\n        <MainMenu router={router} />\n        <Container>\n          <div className=\"main\">\n            <Card.Group className=\"card-main\">\n              hello\n              {Object.keys(confirms).map((key, i) => (\n                <Card className=\"center\">\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      size=\"mini\"\n                      src=\"https://react.semantic-ui.com/images/avatar/large/steve.jpg\"\n                      className=\"center\"\n                    />\n                    <Card.Description className=\"lowerSpace\">\n                      Province state:\n                      <strong>{confirms[key].provinceState}</strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Country Region:\n                      <strong>{confirms[key].countryRegion}</strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Last Update:\n                      <strong>\n                        {moment(confirms[key].lastUpdate).format(\"YYYY-MM-DD\")}\n                      </strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Confirmed:\n                      <strong>{addComma(confirms[key].confirmed)}</strong>\n                    </Card.Description>\n                    <Card.Description className=\"lowerSpace\">\n                      Active:\n                      <strong>{confirms[key].active}</strong>\n                    </Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <div className=\"ui two buttons\">\n                      <Button basic color=\"red\">\n                        Incident Rate: 8.34%\n                      </Button>\n                    </div>\n                  </Card.Content>\n                </Card>\n              ))}\n            </Card.Group>\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}