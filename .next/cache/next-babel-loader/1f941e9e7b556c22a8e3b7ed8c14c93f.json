{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/tracker/pages/searchtest.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment, Image } from \"semantic-ui-react\";\n\nconst source = _.times(200, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, \"$\")\n}));\n\nconsole.log(typeof source[0].title);\nconst initialState = {\n  isLoading: false,\n  results: source,\n  value: \"\"\n};\nexport default class SearchExampleStandard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", initialState);\n\n    _defineProperty(this, \"handleResultSelect\", (e, {\n      result\n    }) => {\n      this.setState({\n        value: result.title\n      });\n      console.log(result);\n    });\n\n    _defineProperty(this, \"handleSearchChange\", (e, {\n      value\n    }) => {\n      console.log(value);\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n    console.log(results);\n    return __jsx(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(Search, _extends({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      renderer: ({\n        image,\n        price,\n        title,\n        description\n      }) => [image && __jsx(\"div\", {\n        key: \"image\",\n        className: \"image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, createHTMLImage(image, {\n        autoGenerateKey: false\n      })), __jsx(\"div\", {\n        key: \"content\",\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, title && __jsx(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }\n      }, title), title && __jsx(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }\n      }, title), description && __jsx(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, description))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, __jsx(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, this.state.results.map((i, jj) => __jsx(React.Fragment, null, __jsx(\"div\", {\n      key: jj,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, i.title), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), \" \", __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }\n    }, i.description), \" \", __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, __jsx(Image, {\n      src: i.image,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, i.price))))))), __jsx(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"State\"), __jsx(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, JSON.stringify(this.state, null, 2)), __jsx(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"Options\"), __jsx(\"pre\", {\n      style: {\n        overflowX: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, JSON.stringify(source, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/tracker/pages/searchtest.js"],"names":["_","faker","React","Component","Search","Grid","Header","Segment","Image","source","times","title","company","companyName","description","catchPhrase","image","internet","avatar","price","finance","amount","console","log","initialState","isLoading","results","value","SearchExampleStandard","e","result","setState","setTimeout","state","length","re","RegExp","escapeRegExp","isMatch","test","filter","render","handleResultSelect","debounce","handleSearchChange","leading","props","createHTMLImage","autoGenerateKey","overflowX","map","i","jj","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport faker from \"faker\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment, Image } from \"semantic-ui-react\";\n\nconst source = _.times(200, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, \"$\"),\n}));\nconsole.log(typeof source[0].title);\n\nconst initialState = { isLoading: false, results: source, value: \"\" };\n\nexport default class SearchExampleStandard extends Component {\n  state = initialState;\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ value: result.title });\n    console.log(result);\n  };\n\n  handleSearchChange = (e, { value }) => {\n    console.log(value);\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState);\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n\n      const isMatch = (result) => re.test(result.title);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(source, isMatch),\n      });\n    }, 300);\n  };\n\n  render() {\n    const { isLoading, value, results } = this.state;\n    console.log(results);\n\n    return (\n      <Grid>\n        <Grid.Column width={6}>\n          <Search\n            loading={isLoading}\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            results={results}\n            value={value}\n            {...this.props}\n            renderer={({ image, price, title, description }) => [\n              image && (\n                <div key=\"image\" className=\"image\">\n                  {createHTMLImage(image, { autoGenerateKey: false })}\n                </div>\n              ),\n              <div key=\"content\" className=\"content\">\n                {title && <div className=\"title\">{title}</div>}\n                {title && <div className=\"title\">{title}</div>}\n                {description && (\n                  <div className=\"description\">{description}</div>\n                )}\n              </div>,\n            ]}\n          />\n          <div>\n            <pre style={{ overflowX: \"auto\" }}>\n              {this.state.results.map((i, jj) => (\n                <>\n                  <div key={jj}>\n                    <div>{i.title}</div>\n                    <br /> <div>{i.description}</div>{\" \"}\n                    <div>\n                      <Image src={i.image} size=\"small\" />\n                    </div>\n                    <div>{i.price}</div>\n                  </div>\n                </>\n              ))}\n            </pre>\n          </div>\n        </Grid.Column>\n        <Grid.Column width={10}>\n          <Segment>\n            <Header>State</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(this.state, null, 2)}\n            </pre>\n            <Header>Options</Header>\n            <pre style={{ overflowX: \"auto\" }}>\n              {JSON.stringify(source, null, 2)}\n            </pre>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}