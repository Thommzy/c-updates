{"version":3,"file":"static/webpack/static/development/pages/index.js.b47c3bf0f194a2fcd6fe.hot-update.js","sources":["webpack:///./Components/Home/CardReport.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  Image,\n  Container,\n  Header,\n  Icon,\n} from \"semantic-ui-react\";\nimport Link from \"next/link\";\nimport moment from \"moment\";\n\nconst date = moment(\"2018-10-03T05:00:00.000+0000\");\n\n//console.log(date.format(\"LLLL\"));\n\nfunction addComma(str) {\n  let aa = str.toString().split(\"\");\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nconst CardReport = ({ read }) => (\n  <Container>\n    <div className=\"cardd\">\n      <Card.Group className=\"card-main\">\n        {Object.keys(read).map((key, i) =>\n          read[key].value || key === \"lastUpdate\" ? (\n            <Card key={i} className=\"center\">\n              <Card.Content>\n                <div className=\"medkit\">\n                  {read[key].value ? (\n                    <Icon\n                      className={\n                        key === \"confirmed\"\n                          ? \"medkit__icon__confirmed\"\n                          : key === \"recovered\"\n                          ? \"medkit__icon__recovered\"\n                          : key === \"deaths\"\n                          ? \"medkit__icon__deaths\"\n                          : null\n                      }\n                      name=\"medkit\"\n                    ></Icon>\n                  ) : null}\n                </div>\n                <Header as=\"h1\">\n                  {key === \"lastUpdate\" ? \"Last Update\" : key}\n                </Header>\n                {key === \"lastUpdate\" ? (\n                  <Header className=\"lightText\" as=\"h3\">\n                    {\" \"}\n                    {moment(read[key]).format(\"LLLL\")}\n                  </Header>\n                ) : null}\n                {key === \"confirmed\" ? (\n                  <Link href=\"/confirmed\" as={`/${key}`}>\n                    <Button className=\"button-way\">Read More</Button>\n                  </Link>\n                ) : null}\n                {key === \"recovered\" ? (\n                  <Link href=\"/recovered\" as={`/${key}`}>\n                    <Button className=\"button-way\">Read More</Button>\n                  </Link>\n                ) : null}\n\n                {key === \"deaths\" ? (\n                  <Link href=\"/deaths\" as={`/${key}`}>\n                    <Button className=\"button-way\">Read More</Button>\n                  </Link>\n                ) : null}\n\n                <Card.Header>\n                  {read[key].value ? addComma(Number(read[key].value)) : null}\n                </Card.Header>\n              </Card.Content>\n            </Card>\n          ) : null\n        )}\n      </Card.Group>\n    </div>\n  </Container>\n);\n\nexport default CardReport;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AASA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CA;AAJA;AACA;AA6DA;;;;A","sourceRoot":""}