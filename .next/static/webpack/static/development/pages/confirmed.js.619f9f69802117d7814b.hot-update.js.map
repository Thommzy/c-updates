{"version":3,"file":"static/webpack/static/development/pages/confirmed.js.619f9f69802117d7814b.hot-update.js","sources":["webpack:///./pages/confirmed.js"],"sourcesContent":["import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport Router from \"next/router\";\nimport { BASE_URL } from \"../config\";\nimport axios from \"axios\";\nimport MainMenu from \"../Components/Header/MainMenu\";\nimport {\n  Card,\n  Image,\n  Button,\n  Header,\n  Container,\n  Input,\n  Search,\n} from \"semantic-ui-react\";\n// import us from \"/static/us-flag.jpg\";\n\nimport moment from \"moment\";\nconst router = Router;\nconsole.log(router);\n\nfunction addComma(str) {\n  let aa = str.toString().split(\"\");\n  if (aa.length === 7) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 6) {\n    aa.splice(3, 0, \",\");\n  }\n  if (aa.length === 5) {\n    aa.splice(2, 0, \",\");\n  }\n  if (aa.length === 4) {\n    aa.splice(1, 0, \",\");\n  }\n  if (aa.length === 3) {\n    aa;\n  }\n\n  return aa.join(\"\");\n}\n\nexport default class confirmed extends Component {\n  static async getInitialProps() {\n    let confirms = [];\n    try {\n      const response = await axios.get(`${BASE_URL}/confirmed`);\n      confirms = response.data;\n      // console.table(confirms);\n    } catch (error) {\n      //  console.log(error);\n    }\n    return { confirms, loading: false };\n  }\n\n  state = { isLoading: false, results: this.props.confirms, value: \"\" };\n\n  handleResultSelect = (e, { result }) =>\n    this.setState({ value: result.countryRegion });\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value });\n\n    setTimeout(() => {\n      if (this.state.value.length < 1)\n        return this.setState({\n          isLoading: false,\n          results: this.props.confirms,\n          value: \"\",\n        });\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), \"i\");\n      const isMatch = (result) => re.test(result.countryRegion);\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(this.props.confirms, isMatch),\n      });\n    }, 300);\n  };\n\n  render() {\n    const { confirms, loading } = this.props;\n    const { isLoading, value, results } = this.state;\n    console.log(results);\n    return (\n      <>\n        <MainMenu router={router} />\n        <Search\n          loading={isLoading}\n          onResultSelect={this.handleResultSelect}\n          onSearchChange={_.debounce(this.handleSearchChange, 500, {\n            leading: true,\n          })}\n          results={results}\n          value={value}\n        />\n        <Container>\n          {!loading ? (\n            <div className=\"main-confirmed\">\n              <Card.Group className=\"card-main\">\n                {results.map((key, i) => (\n                  <Card key={i} className=\"center\">\n                    <Card.Content>\n                      <Image\n                        floated=\"right\"\n                        size=\"mini\"\n                        src={\n                          key.countryRegion === \"US\"\n                            ? \"/static/us-flag.jpg\"\n                            : key.countryRegion === \"Spain\"\n                            ? \"/static/spain-flag.jpg\"\n                            : null\n                        }\n                        className=\"center\"\n                      />\n                      <Card.Description className=\"lowerSpace\">\n                        Province state:\n                        <strong>{key.provinceState}</strong>\n                      </Card.Description>\n                      <Card.Description className=\"lowerSpace\">\n                        Country Region:\n                        <strong>{key.countryRegion}</strong>\n                      </Card.Description>\n                      <Card.Description className=\"lowerSpace\">\n                        Last Update:\n                        <strong>\n                          {moment(key.lastUpdate).format(\"YYYY-MM-DD\")}\n                        </strong>\n                      </Card.Description>\n                      <Card.Description className=\"lowerSpace\">\n                        Confirmed:\n                        <strong>{addComma(confirms[key].confirmed)}</strong>\n                      </Card.Description>\n                      <Card.Description className=\"lowerSpace\">\n                        Active:\n                        <strong>{addComma(confirms[key].active)}</strong>\n                      </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                      <div className=\"ui two buttons\">\n                        <Button basic color=\"red\">\n                          ||\n                        </Button>\n                      </div>\n                    </Card.Content>\n                  </Card>\n                ))}\n              </Card.Group>\n            </div>\n          ) : (\n            <h1>Loading...</h1>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAOA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;AAhHA;;;AAEA;AACA;;AADA;AACA;AACA;;;;;;;;;AAIA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAXA;AACA;;;;;A","sourceRoot":""}